--- ../src_base/minecraft_server/net/minecraft/src/ServerConfigurationManager.java
+++ ../src_work/minecraft_server/net/minecraft/src/ServerConfigurationManager.java
@@ -12,6 +12,8 @@
 import java.util.Map;
 import java.util.Set;
 import java.util.Map.Entry;
+
+import jk_5.nailed.NailedEventFactory;
 import net.minecraft.server.MinecraftServer;
 
 public abstract class ServerConfigurationManager {
@@ -20,7 +22,6 @@
    public final List playerEntityList = new ArrayList();
    private final BanList bannedPlayers = new BanList(new File("banned-players.txt"));
    private final BanList bannedIPs = new BanList(new File("banned-ips.txt"));
-   private Set ops = new HashSet();
    private Set whiteListedPlayers = new HashSet();
    private IPlayerFileData playerNBTManagerObj;
    private boolean whiteListEnforced;
@@ -58,7 +59,6 @@
       var7.sendPacket(new Packet16BlockItemSwitch(par2EntityPlayerMP.inventory.currentItem));
       this.func_96456_a((ServerScoreboard)var5.getScoreboard(), par2EntityPlayerMP);
       this.updateTimeAndWeatherForPlayer(par2EntityPlayerMP, var5);
-      this.sendChatMsg(ChatMessageComponent.func_111082_b("multiplayer.player.joined", new Object[]{par2EntityPlayerMP.getTranslatedEntityName()}).func_111059_a(EnumChatFormatting.YELLOW));
       this.playerLoggedIn(par2EntityPlayerMP);
       var7.setPlayerLocation(par2EntityPlayerMP.posX, par2EntityPlayerMP.posY, par2EntityPlayerMP.posZ, par2EntityPlayerMP.rotationYaw, par2EntityPlayerMP.rotationPitch);
       this.mcServer.getNetworkThread().addPlayer(var7);
@@ -151,6 +151,7 @@
       this.sendPacketToAllPlayers(new Packet201PlayerInfo(par1EntityPlayerMP.getCommandSenderName(), true, 1000));
       this.playerEntityList.add(par1EntityPlayerMP);
       WorldServer var2 = this.mcServer.worldServerForDimension(par1EntityPlayerMP.dimension);
+      NailedEventFactory.playerLoggedIn(par1EntityPlayerMP, var2);
       var2.spawnEntityInWorld(par1EntityPlayerMP);
       this.func_72375_a(par1EntityPlayerMP, (WorldServer)null);
 
@@ -165,6 +166,7 @@
    }
 
    public void playerLoggedOut(EntityPlayerMP par1EntityPlayerMP) {
+      NailedEventFactory.playerLoggedOut(par1EntityPlayerMP);
       this.writePlayerData(par1EntityPlayerMP);
       WorldServer var2 = par1EntityPlayerMP.getServerForPlayer();
       if(par1EntityPlayerMP.ridingEntity != null) {
@@ -426,21 +428,13 @@
       return this.bannedIPs;
    }
 
-   public void addOp(String par1Str) {
-      this.ops.add(par1Str.toLowerCase());
-   }
-
-   public void removeOp(String par1Str) {
-      this.ops.remove(par1Str.toLowerCase());
-   }
-
    public boolean isAllowedToLogin(String par1Str) {
       par1Str = par1Str.trim().toLowerCase();
-      return !this.whiteListEnforced || this.ops.contains(par1Str) || this.whiteListedPlayers.contains(par1Str);
+      return !this.whiteListEnforced || NailedEventFactory.isOp(par1Str) || this.whiteListedPlayers.contains(par1Str);
    }
 
    public boolean areCommandsAllowed(String par1Str) {
-      return this.ops.contains(par1Str.trim().toLowerCase()) || this.mcServer.isSinglePlayer() && this.mcServer.worldServers[0].getWorldInfo().areCommandsAllowed() && this.mcServer.getServerOwner().equalsIgnoreCase(par1Str) || this.commandsAllowedForAll;
+      return NailedEventFactory.isOp(par1Str) || this.mcServer.isSinglePlayer() && this.mcServer.worldServers[0].getWorldInfo().areCommandsAllowed() && this.mcServer.getServerOwner().equalsIgnoreCase(par1Str) || this.commandsAllowedForAll;
    }
 
    public EntityPlayerMP getPlayerEntity(String par1Str) {
@@ -592,10 +586,6 @@
       return this.whiteListedPlayers;
    }
 
-   public Set getOps() {
-      return this.ops;
-   }
-
    public void loadWhiteList() {}
 
    public void updateTimeAndWeatherForPlayer(EntityPlayerMP par1EntityPlayerMP, WorldServer par2WorldServer) {
